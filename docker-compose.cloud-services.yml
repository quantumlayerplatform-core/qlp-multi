version: '3.8'

services:
  # Core QLP Services remain the same
  orchestrator:
    container_name: qlp-orchestrator
    build:
      context: .
      dockerfile: services/orchestrator/Dockerfile
    ports:
      - "8000:8000"
    environment:
      SERVICE_NAME: orchestrator
      PORT: 8000
      # Supabase PostgreSQL connection
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      # Temporal Cloud
      TEMPORAL_SERVER: ${TEMPORAL_CLOUD_ENDPOINT}
      TEMPORAL_NAMESPACE: ${TEMPORAL_CLOUD_NAMESPACE}
      TEMPORAL_TLS_CERT: ${TEMPORAL_CLOUD_TLS_CERT}
      TEMPORAL_TLS_KEY: ${TEMPORAL_CLOUD_TLS_KEY}
      # Qdrant Cloud
      QDRANT_URL: ${QDRANT_CLOUD_URL}
      QDRANT_API_KEY: ${QDRANT_CLOUD_API_KEY}
      QDRANT_CLOUD_URL: ${QDRANT_CLOUD_URL}
      # Redis remains local for now (or use Redis Cloud)
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
      - ./logs:/app/logs
    entrypoint: ["/app/docker-entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qlp-network

  agent-factory:
    container_name: qlp-agent-factory
    build:
      context: .
      dockerfile: services/agents/Dockerfile
    ports:
      - "8001:8001"
    environment:
      SERVICE_NAME: agent-factory
      PORT: 8001
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
    entrypoint: ["/app/docker-entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qlp-network

  validation-mesh:
    container_name: qlp-validation-mesh
    build:
      context: .
      dockerfile: services/validation/Dockerfile
    ports:
      - "8002:8002"
    environment:
      SERVICE_NAME: validation-mesh
      PORT: 8002
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: ["/app/docker-entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qlp-network

  vector-memory:
    container_name: qlp-vector-memory
    build:
      context: .
      dockerfile: services/memory/Dockerfile
    ports:
      - "8003:8003"
    environment:
      SERVICE_NAME: vector-memory
      PORT: 8003
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      QDRANT_URL: ${QDRANT_CLOUD_URL}
      QDRANT_API_KEY: ${QDRANT_CLOUD_API_KEY}
      QDRANT_CLOUD_URL: ${QDRANT_CLOUD_URL}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
    entrypoint: ["/app/docker-entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qlp-network

  execution-sandbox:
    container_name: qlp-execution-sandbox
    build:
      context: .
      dockerfile: services/sandbox/Dockerfile
    ports:
      - "8004:8004"
    environment:
      SERVICE_NAME: execution-sandbox
      PORT: 8004
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
    entrypoint: ["/app/docker-entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - qlp-network

  # Temporal Worker - connects to Temporal Cloud
  temporal-worker:
    container_name: qlp-temporal-worker
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.temporal-worker
    environment:
      SERVICE_NAME: temporal-worker
      TEMPORAL_SERVER: ${TEMPORAL_CLOUD_ENDPOINT}
      TEMPORAL_NAMESPACE: ${TEMPORAL_CLOUD_NAMESPACE}
      TEMPORAL_TLS_CERT: ${TEMPORAL_CLOUD_TLS_CERT}
      TEMPORAL_TLS_KEY: ${TEMPORAL_CLOUD_TLS_KEY}
      TEMPORAL_CLOUD_ENDPOINT: ${TEMPORAL_CLOUD_ENDPOINT}
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
    entrypoint: ["/app/docker-entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - qlp-network

  marketing-worker:
    container_name: qlp-marketing-worker
    build:
      context: .
      dockerfile: services/marketing/Dockerfile
    environment:
      SERVICE_NAME: marketing-worker
      TEMPORAL_SERVER: ${TEMPORAL_CLOUD_ENDPOINT}
      TEMPORAL_NAMESPACE: ${TEMPORAL_CLOUD_NAMESPACE}
      TEMPORAL_TLS_CERT: ${TEMPORAL_CLOUD_TLS_CERT}
      TEMPORAL_TLS_KEY: ${TEMPORAL_CLOUD_TLS_KEY}
      TEMPORAL_CLOUD_ENDPOINT: ${TEMPORAL_CLOUD_ENDPOINT}
      DATABASE_URL: ${SUPABASE_DATABASE_URL}
      SUPABASE_DATABASE_URL: ${SUPABASE_DATABASE_URL}
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint-cloud.sh:/app/docker-entrypoint.sh:ro
    entrypoint: ["/app/docker-entrypoint.sh"]
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - qlp-network

  # Keep Redis local for now (or replace with Redis Cloud)
  redis:
    container_name: qlp-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - qlp-network

  # NGINX remains for local routing
  nginx:
    container_name: qlp-nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./deployments/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - orchestrator
      - agent-factory
      - validation-mesh
      - vector-memory
      - execution-sandbox
    networks:
      - qlp-network

  # Remove these services as they're replaced by cloud:
  # - postgres (replaced by Supabase)
  # - qdrant (replaced by Qdrant Cloud)
  # - temporal (replaced by Temporal Cloud)
  # - temporal-ui (use Temporal Cloud UI)

networks:
  qlp-network:
    driver: bridge

volumes:
  redis-data: