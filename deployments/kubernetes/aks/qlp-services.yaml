---
# Orchestrator Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator
  namespace: qlp-production
  labels:
    app: orchestrator
    component: core
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: orchestrator
  template:
    metadata:
      labels:
        app: orchestrator
        component: core
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: qlp-service-account
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "qlp"
        effect: "NoSchedule"
      nodeSelector:
        workload: "qlp"
      containers:
      - name: orchestrator
        image: ${ACR_LOGIN_SERVER}/qlp-orchestrator:${IMAGE_TAG}
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: SERVICE_NAME
          value: orchestrator
        - name: PORT
          value: "8000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: qlp-azure-secrets
              key: DATABASE_URL
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: AZURE_OPENAI_ENDPOINT
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: AZURE_OPENAI_API_KEY
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: GITHUB_TOKEN
        envFrom:
        - configMapRef:
            name: qlp-config
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-kvname"
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator
  namespace: qlp-production
  labels:
    app: orchestrator
spec:
  selector:
    app: orchestrator
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP
---
# Agent Factory Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-factory
  namespace: qlp-production
  labels:
    app: agent-factory
    component: core
    tier: backend
spec:
  replicas: 5
  selector:
    matchLabels:
      app: agent-factory
  template:
    metadata:
      labels:
        app: agent-factory
        component: core
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: qlp-service-account
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "qlp"
        effect: "NoSchedule"
      nodeSelector:
        workload: "qlp"
      containers:
      - name: agent-factory
        image: ${ACR_LOGIN_SERVER}/qlp-agent-factory:${IMAGE_TAG}
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: SERVICE_NAME
          value: agent-factory
        - name: PORT
          value: "8001"
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: AZURE_OPENAI_ENDPOINT
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: AZURE_OPENAI_API_KEY
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: OPENAI_API_KEY
              optional: true
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: qlp-secrets
              key: ANTHROPIC_API_KEY
              optional: true
        envFrom:
        - configMapRef:
            name: qlp-config
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: agent-factory
  namespace: qlp-production
  labels:
    app: agent-factory
spec:
  selector:
    app: agent-factory
  ports:
  - port: 8001
    targetPort: 8001
    name: http
  type: ClusterIP
---
# Validation Mesh Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: validation-mesh
  namespace: qlp-production
  labels:
    app: validation-mesh
    component: core
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: validation-mesh
  template:
    metadata:
      labels:
        app: validation-mesh
        component: core
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
    spec:
      serviceAccountName: qlp-service-account
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "qlp"
        effect: "NoSchedule"
      nodeSelector:
        workload: "qlp"
      containers:
      - name: validation-mesh
        image: ${ACR_LOGIN_SERVER}/qlp-validation-mesh:${IMAGE_TAG}
        ports:
        - containerPort: 8002
          name: http
        env:
        - name: SERVICE_NAME
          value: validation-mesh
        - name: PORT
          value: "8002"
        envFrom:
        - configMapRef:
            name: qlp-config
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: validation-mesh
  namespace: qlp-production
  labels:
    app: validation-mesh
spec:
  selector:
    app: validation-mesh
  ports:
  - port: 8002
    targetPort: 8002
    name: http
  type: ClusterIP
---
# Vector Memory Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vector-memory
  namespace: qlp-production
  labels:
    app: vector-memory
    component: core
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vector-memory
  template:
    metadata:
      labels:
        app: vector-memory
        component: core
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
    spec:
      serviceAccountName: qlp-service-account
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "qlp"
        effect: "NoSchedule"
      nodeSelector:
        workload: "qlp"
      containers:
      - name: vector-memory
        image: ${ACR_LOGIN_SERVER}/qlp-vector-memory:${IMAGE_TAG}
        ports:
        - containerPort: 8003
          name: http
        env:
        - name: SERVICE_NAME
          value: vector-memory
        - name: PORT
          value: "8003"
        envFrom:
        - configMapRef:
            name: qlp-config
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: vector-memory
  namespace: qlp-production
  labels:
    app: vector-memory
spec:
  selector:
    app: vector-memory
  ports:
  - port: 8003
    targetPort: 8003
    name: http
  type: ClusterIP
---
# Execution Sandbox Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: execution-sandbox
  namespace: qlp-production
  labels:
    app: execution-sandbox
    component: core
    tier: backend
spec:
  replicas: 5
  selector:
    matchLabels:
      app: execution-sandbox
  template:
    metadata:
      labels:
        app: execution-sandbox
        component: core
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8004"
    spec:
      serviceAccountName: qlp-service-account
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "qlp"
        effect: "NoSchedule"
      nodeSelector:
        workload: "qlp"
      containers:
      - name: execution-sandbox
        image: ${ACR_LOGIN_SERVER}/qlp-execution-sandbox:${IMAGE_TAG}
        ports:
        - containerPort: 8004
          name: http
        env:
        - name: SERVICE_NAME
          value: execution-sandbox
        - name: PORT
          value: "8004"
        envFrom:
        - configMapRef:
            name: qlp-config
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        securityContext:
          privileged: true  # Required for Docker-in-Docker
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
        livenessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8004
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
---
apiVersion: v1
kind: Service
metadata:
  name: execution-sandbox
  namespace: qlp-production
  labels:
    app: execution-sandbox
spec:
  selector:
    app: execution-sandbox
  ports:
  - port: 8004
    targetPort: 8004
    name: http
  type: ClusterIP